CCS PCH C Compiler, Version 5.015, 5967               10-abr-18 12:54

               Filename:   C:\Users\VAIO\Desktop\class_micro\CCS C Projects\Practica_8\practica_8.lst

               ROM used:   140 bytes (0%)
                           Largest free fragment is 32628
               RAM used:   5 (0%) at main() level
                           7 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   002A
.................... #include <practica_8.h> 
.................... #include <18F4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  07
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETURN 0
....................  
....................  
....................  
.................... #use fast_io(B) 
....................  
....................  
.................... void main() 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  MOVF   FC1,W
0030:  ANDLW  C0
0032:  IORLW  0F
0034:  MOVWF  FC1
0036:  MOVLW  07
0038:  MOVWF  FB4
.................... { 
....................  
....................    set_tris_b(0); //configuro como salida el puerto B 
003A:  MOVLW  00
003C:  MOVWF  F93
....................    output_b(0); //limpio el puerto B 
003E:  CLRF   F8A
....................     
....................    while(TRUE) 
....................    { 
....................       int8 contador; 
....................        
....................       for(contador = 0; contador <= 255; contador++){//comienzo for 
0040:  CLRF   05
....................          output_b(~contador); 
0042:  MOVFF  05,06
0046:  COMF   06,F
0048:  MOVFF  06,F8A
....................          delay_ms(250); 
004C:  MOVLW  FA
004E:  MOVWF  07
0050:  RCALL  0004
0052:  INCF   05,F
0054:  BRA    0042
....................           
....................       }//termino mi for 
....................        
....................       output_b(0); 
0056:  CLRF   F8A
....................       delay_ms(500); 
0058:  MOVLW  02
005A:  MOVWF  06
005C:  MOVLW  FA
005E:  MOVWF  07
0060:  RCALL  0004
0062:  DECFSZ 06,F
0064:  BRA    005C
....................       output_b(255); 
0066:  SETF   F8A
....................       output_b(0); 
0068:  CLRF   F8A
....................       delay_ms(500); 
006A:  MOVLW  02
006C:  MOVWF  06
006E:  MOVLW  FA
0070:  MOVWF  07
0072:  RCALL  0004
0074:  DECFSZ 06,F
0076:  BRA    006E
....................       output_b(255); 
0078:  SETF   F8A
....................       delay_ms(500); 
007A:  MOVLW  02
007C:  MOVWF  06
007E:  MOVLW  FA
0080:  MOVWF  07
0082:  RCALL  0004
0084:  DECFSZ 06,F
0086:  BRA    007E
0088:  BRA    0040
....................    } 
....................  
.................... } 
008A:  SLEEP 

Configuration Fuses:
   Word  1: CC04   PLL5 CPUDIV1 NOUSBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

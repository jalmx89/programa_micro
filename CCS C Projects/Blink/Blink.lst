CCS PCH C Compiler, Version 5.015, 5967               25-feb-18 19:29

               Filename:   C:\Users\VAIO\Documents\CCS C Projects\Blink\Blink.lst

               ROM used:   100 bytes (0%)
                           Largest free fragment is 32668
               RAM used:   5 (0%) at main() level
                           5 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   002C
.................... #include <Blink.h> 
.................... #include <18F4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=4MHz) 
0004:  CLRF   FEA
0006:  MOVLW  05
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002A
000E:  MOVLW  01
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  4A
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  BRA    0026
0026:  DECFSZ FEF,F
0028:  BRA    000E
002A:  RETURN 0
....................  
....................  
....................  
.................... #use fast_io(B) 
....................  
.................... const byte display[] = {0x0F}; 
....................  
.................... void main() 
002C:  CLRF   FF8
002E:  BCF    FD0.7
0030:  MOVF   FC1,W
0032:  ANDLW  C0
0034:  IORLW  0F
0036:  MOVWF  FC1
0038:  MOVLW  07
003A:  MOVWF  FB4
.................... { 
....................  
....................    port_b_pullups(TRUE);      //activo la resistencia de pullup interna 
003C:  BCF    FF1.7
....................    set_tris_b(0x01);          //configuro las entras y salidas 
003E:  MOVLW  01
0040:  MOVWF  F93
....................    output_low(PIN_B1);        //pongo el PB.1 a cero 
0042:  BCF    F8A.1
....................     
....................  
....................    while(TRUE) //se ejecuta infinitamente 
....................    { 
....................        
....................       if(input(PIN_B0) == 1){ //si no esta presionado el boton, entra 
0044:  BTFSS  F81.0
0046:  BRA    004C
....................          output_low(PIN_B1);  //pongo a cero PB.1  
0048:  BCF    F8A.1
....................       } 
004A:  BRA    004E
....................       else{ 
....................          output_high(PIN_B1); //pongo a uno el PB.1 
004C:  BSF    F8A.1
....................       } 
....................        
....................       output_b(0); 
004E:  CLRF   F8A
....................       delay_ms(250); 
0050:  MOVLW  FA
0052:  MOVWF  05
0054:  RCALL  0004
....................       output_b(display[0]); 
0056:  MOVLW  0F
0058:  MOVWF  F8A
....................       delay_ms(250); 
005A:  MOVLW  FA
005C:  MOVWF  05
005E:  RCALL  0004
0060:  BRA    0044
....................    } 
....................  
.................... } 
0062:  SLEEP 

Configuration Fuses:
   Word  1: C000   PLL1 CPUDIV1 NOUSBDIV XT FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

CCS PCH C Compiler, Version 5.015, 5967               10-abr-18 13:57

               Filename:   C:\Users\VAIO\Desktop\class_micro\CCS C Projects\display_for_basico\display_basico.lst

               ROM used:   130 bytes (0%)
                           Largest free fragment is 32638
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   0046
.................... #include <display_basico.h> 
.................... #include <18LF4550.h> 
.................... //////////// Standard Header file for the PIC18LF4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18LF4550 
0004:  CLRF   FF7
0006:  ADDLW  14
0008:  MOVWF  FF6
000A:  MOVLW  00
000C:  ADDWFC FF7,F
000E:  TBLRD*+
0010:  MOVF   FF5,W
0012:  RETURN 0
0014:  DATA 3F,06
0016:  DATA 5B,4F
0018:  DATA 66,6D
001A:  DATA FD,07
001C:  DATA FF,67
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=20000000) 
001E:  CLRF   FEA
0020:  MOVLW  06
0022:  MOVWF  FE9
0024:  MOVF   FEF,W
0026:  BZ    0042
0028:  MOVLW  06
002A:  MOVWF  01
002C:  CLRF   00
002E:  DECFSZ 00,F
0030:  BRA    002E
0032:  DECFSZ 01,F
0034:  BRA    002C
0036:  MOVLW  7B
0038:  MOVWF  00
003A:  DECFSZ 00,F
003C:  BRA    003A
003E:  DECFSZ FEF,F
0040:  BRA    0028
0042:  GOTO   007A (RETURN)
....................  
....................  
....................  
.................... #use fast_io(D) 
....................  
.................... void main() 
0046:  CLRF   FF8
0048:  BCF    FD0.7
004A:  MOVF   FC1,W
004C:  ANDLW  C0
004E:  IORLW  0F
0050:  MOVWF  FC1
0052:  MOVLW  07
0054:  MOVWF  FB4
.................... { 
....................    set_tris_d(0); 
0056:  MOVLW  00
0058:  MOVWF  F95
....................                           // 0   1      2    3      4    5     6     7     8      9 
....................    const int8 numbers[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0xfd, 0x07, 0xff, 0x67}; //array con las posiciones del display 
....................     
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................       for(int i=0; i < 0x0A; i++){//for llega hasta la antes del 10 
005A:  CLRF   05
005C:  MOVF   05,W
005E:  SUBLW  09
0060:  BNC   007E
....................          output_d(numbers[i]); 
0062:  CLRF   03
0064:  MOVF   05,W
0066:  MOVFF  FF2,06
006A:  BCF    FF2.7
006C:  RCALL  0004
006E:  BTFSC  06.7
0070:  BSF    FF2.7
0072:  MOVWF  F8C
....................          delay_ms(250); 
0074:  MOVLW  FA
0076:  MOVWF  06
0078:  BRA    001E
007A:  INCF   05,F
007C:  BRA    005C
....................       } 
007E:  BRA    005A
....................    } 
....................  
.................... } 
....................  
0080:  SLEEP 

Configuration Fuses:
   Word  1: CC04   PLL5 CPUDIV1 NOUSBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
